# Generated by Django 5.2 on 2025-09-16 22:23

import core.models.core
import dirtyfields.dirtyfields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0010_multitenantcompany_active_and_more'),
        ('ebay', '0008_rename_remote_property_ebayproducttypeitem_ebay_property'),
        ('properties', '0016_alter_productpropertytexttranslation_language_and_more'),
        ('sales_channels', '0039_alter_remotelanguage_local_instance'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EbaySalesChannelImport',
            fields=[
                ('saleschannelimport_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sales_channels.saleschannelimport')),
                ('type', models.CharField(choices=[('schema', 'Schema'), ('products', 'Products')], max_length=32)),
            ],
            options={
                'verbose_name': 'eBay Sales Channel Import',
                'verbose_name_plural': 'eBay Sales Channel Imports',
            },
            bases=('sales_channels.saleschannelimport',),
        ),
        migrations.AddField(
            model_name='ebaysaleschannelview',
            name='length_unit',
            field=models.CharField(blank=True, choices=[('INCH', 'Inch'), ('FEET', 'Feet'), ('CENTIMETER', 'Centimeter'), ('METER', 'Meter')], help_text='Unit of measure for package dimensions.', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='ebaysaleschannelview',
            name='weight_unit',
            field=models.CharField(blank=True, choices=[('POUND', 'Pound'), ('KILOGRAM', 'Kilogram'), ('OUNCE', 'Ounce'), ('GRAM', 'Gram')], help_text='Unit of measure for package weight.', max_length=16, null=True),
        ),
        migrations.CreateModel(
            name='EbayInternalProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remote_id', models.CharField(blank=True, help_text='ID of the object in the remote system', max_length=255, null=True)),
                ('successfully_created', models.BooleanField(default=True, help_text='Indicates if the object was successfully created in the remote system.')),
                ('outdated', models.BooleanField(default=False, help_text='Indicates if the remote product is outdated due to an error.')),
                ('outdated_since', models.DateTimeField(blank=True, help_text='Timestamp indicating when the object became outdated.', null=True)),
                ('code', models.CharField(help_text='Field code used when building eBay requests.', max_length=255)),
                ('label', models.CharField(help_text='Human readable label for the internal field.', max_length=255)),
                ('type', models.CharField(choices=[('INT', 'Integer'), ('FLOAT', 'Float'), ('TEXT', 'Text'), ('DESCRIPTION', 'Description'), ('BOOLEAN', 'Boolean'), ('DATE', 'Date'), ('DATETIME', 'Date time'), ('SELECT', 'Select'), ('MULTISELECT', 'Multi Select')], default='TEXT', help_text='Mapped internal property type for this field.', max_length=16)),
                ('is_root', models.BooleanField(default=False, help_text='Defines if the value belongs to the inventory item payload root.')),
                ('created_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('last_update_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_last_update_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('local_instance', models.ForeignKey(help_text='Local property associated with this internal eBay field.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.property')),
                ('multi_tenant_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.multitenantcompany')),
                ('sales_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_channels.saleschannel')),
            ],
            options={
                'verbose_name': 'eBay Internal Property',
                'verbose_name_plural': 'eBay Internal Properties',
                'constraints': [models.UniqueConstraint(fields=('sales_channel', 'code'), name='unique_ebay_internal_property_code_per_channel')],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, core.models.core.GetAbsoluteURLMixin, models.Model),
        ),
    ]
