# Generated by Django 5.2 on 2025-10-29 15:01

import core.models.core
import dirtyfields.dirtyfields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0010_multitenantcompany_active_and_more'),
        ('ebay', '0017_ebaycategory_has_children_ebaycategory_is_root_and_more'),
        ('products', '0023_producttranslation_subtitle'),
        ('sales_channels', '0050_populate_saleschannelgptfeed'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EbayProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remote_id', models.CharField(max_length=50)),
                ('created_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('last_update_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_last_update_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('multi_tenant_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.multitenantcompany')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('sales_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_channels.saleschannel')),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_channels.saleschannelview')),
            ],
            options={
                'unique_together': {('product', 'view')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, core.models.core.GetAbsoluteURLMixin, models.Model),
        ),
    ]
