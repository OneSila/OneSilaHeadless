# Generated by Django 5.2 on 2025-10-10 18:10

import core.models.core
import dirtyfields.dirtyfields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0010_multitenantcompany_active_and_more'),
        ('ebay', '0014_ebayinternalpropertyoption'),
        ('sales_channels', '0042_saleschannelviewassign_listing_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EbayProductOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remote_id', models.CharField(blank=True, help_text='ID of the object in the remote system', max_length=255, null=True)),
                ('successfully_created', models.BooleanField(default=True, help_text='Indicates if the object was successfully created in the remote system.')),
                ('outdated', models.BooleanField(default=False, help_text='Indicates if the remote product is outdated due to an error.')),
                ('outdated_since', models.DateTimeField(blank=True, help_text='Timestamp indicating when the object became outdated.', null=True)),
                ('listing_id', models.CharField(blank=True, help_text='Listing identifier returned by eBay.', max_length=64, null=True)),
                ('listing_status', models.CharField(blank=True, help_text='Current status of the linked listing, if available.', max_length=32, null=True)),
                ('created_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('last_update_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_last_update_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('multi_tenant_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.multitenantcompany')),
                ('remote_product', models.ForeignKey(help_text='Remote product this offer belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='ebay.ebayproduct')),
                ('sales_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_channels.saleschannel')),
                ('sales_channel_view', models.ForeignKey(help_text='Marketplace view associated with this offer.', on_delete=django.db.models.deletion.CASCADE, related_name='product_offers', to='ebay.ebaysaleschannelview')),
            ],
            options={
                'verbose_name': 'eBay Product Offer',
                'verbose_name_plural': 'eBay Product Offers',
                'unique_together': {('remote_product', 'sales_channel_view')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, core.models.core.GetAbsoluteURLMixin, models.Model),
        ),
    ]
