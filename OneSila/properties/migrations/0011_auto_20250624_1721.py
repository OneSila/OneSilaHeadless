# Generated by Django 5.2 on 2025-06-24 16:21

from django.db import migrations

def create_brand_properties(apps, schema_editor):
    Property = apps.get_model('properties', 'Property')
    PropertyTranslation = apps.get_model('properties', 'PropertyTranslation')
    MultiTenantCompany = apps.get_model('core', 'MultiTenantCompany')
    from core.defaults import get_brand_name

    for company in MultiTenantCompany.objects.all().iterator():
        language = company.language
        name = get_brand_name(language)
        property_instance, created = Property.objects.get_or_create(
            internal_name='brand',
            multi_tenant_company=company,
            type='SELECT',
        )


        updated = False
        if not property_instance.is_public_information:
            property_instance.is_public_information = True
            updated = True

        if not property_instance.non_deletable:
            property_instance.non_deletable = True
            updated = True

        if updated:
            property_instance.save()

        translation, _ = PropertyTranslation.objects.get_or_create(
            property=property_instance,
            language=language,
            multi_tenant_company=company,
        )


        if translation.name != name:
            translation.name = name
            translation.save()



def reverse_brand_properties(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0010_property_non_deletable'),
    ]

    operations = [
        migrations.RunPython(create_brand_properties, reverse_brand_properties),
    ]
