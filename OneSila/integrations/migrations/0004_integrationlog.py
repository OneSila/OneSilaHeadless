# Generated by Django 5.1.1 on 2024-10-17 13:42

import dirtyfields.dirtyfields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0134_demodatarelation_created_by_multi_tenant_user_and_more'),
        ('integrations', '0003_integrationtaskqueue'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=32)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed')], max_length=32)),
                ('payload', models.JSONField(blank=True, help_text='The API call payload associated with this log.', null=True)),
                ('response', models.TextField(blank=True, help_text='The API response or additional information.', null=True)),
                ('error_traceback', models.TextField(blank=True, help_text='Detailed error traceback if the action failed.', null=True)),
                ('user_error', models.BooleanField(default=False)),
                ('identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('keep', models.BooleanField(default=False, help_text='Whether to keep this log permanently.')),
                ('related_object_str', models.CharField(blank=True, help_text='String representation of the related object.', max_length=556, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('created_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='integrations.integration')),
                ('last_update_by_multi_tenant_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_last_update_by_multi_tenant_user_set', to=settings.AUTH_USER_MODEL)),
                ('multi_tenant_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.multitenantcompany')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Remote Log',
                'verbose_name_plural': 'Remote Logs',
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
